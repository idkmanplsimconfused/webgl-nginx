server {
    listen 80;
    server_name _;
    
    # Conditionally redirect HTTP to HTTPS based on FORCE_HTTPS environment variable
    location / {
        set $redirect_https 0;
        if ($http_x_forwarded_proto != 'https') {
            set $redirect_https "${FORCE_HTTPS}";
        }
        if ($redirect_https = '1') {
            return 301 https://$host$request_uri;
        }
        
        # If not redirecting, serve content directly
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ =404;
    }
}

server {
    listen 443 ssl;
    server_name _;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    
    # Document root
    root /usr/share/nginx/html;
    index index.html;
    
    # MIME types for Unity WebGL
    include /etc/nginx/mime.types;
    
    # Additional MIME types for WebGL
    types {
        application/wasm wasm;
        application/octet-stream data;
        application/octet-stream symbols.json;
    }
    
    # Enable gzip compression
    gzip on;
    gzip_static on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types application/javascript application/wasm application/octet-stream;
    gzip_vary on;
    
    # Enable Brotli compression
    brotli on;
    brotli_static on;
    brotli_comp_level 6;
    brotli_types application/javascript application/wasm application/octet-stream;
    
    # Handle compressed files
    location ~ \.gz$ {
        add_header Content-Encoding gzip;
        gzip off;
    }
    
    location ~ \.br$ {
        add_header Content-Encoding br;
        gzip off;
    }
    
    # Handle specific file types
    location ~ \.js\.gz$ {
        add_header Content-Encoding gzip;
        add_header Content-Type application/javascript;
        gzip off;
    }
    
    location ~ \.js\.br$ {
        add_header Content-Encoding br;
        add_header Content-Type application/javascript;
        gzip off;
    }
    
    location ~ \.wasm\.gz$ {
        add_header Content-Encoding gzip;
        add_header Content-Type application/wasm;
        gzip off;
    }
    
    location ~ \.wasm\.br$ {
        add_header Content-Encoding br;
        add_header Content-Type application/wasm;
        gzip off;
    }
    
    # Cache static content
    location ~* \.(json|wasm|js|data|symbols\.json)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }
    
    # Default location
    location / {
        try_files $uri $uri/ =404;
    }
} 